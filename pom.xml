<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>apigee</groupId>
	<artifactId>pingstatus-tls-v1</artifactId>
	<version>-</version>
	<name>pingstatus-tls-v1</name>
	<packaging>pom</packaging>

	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<name>Maven Plugin Repository</name>
			<url>https://repo1.maven.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<org.slf4j.simpleLogger.defaultLogLevel>info</org.slf4j.simpleLogger.defaultLogLevel>
		<project.root.dir>${basedir}</project.root.dir>
		<target.root.dir>${basedir}/target</target.root.dir>
		<commit></commit>
		<branch>a local</branch>
	</properties>

	<!-- This is where you add environment specific properties under various profile names 
		 For apigee.options, refer to "Advanced Configuration Options" under https://github.com/apigee/apigee-deploy-maven-plugin#pom-xml-sample 
	-->
	<profiles>
		<profile>
			<id>test-two-way</id>
			<!-- amer-demo13 - Uses properties from $HOME/.m2/settings.xml or environment variables via set-edge-env-values used in Jenkins -->
			<properties>
				<apigee.profile>amer-demo13-test</apigee.profile>
				<apigee.env>${EdgeEnv}</apigee.env>
				<apigee.hosturl>https://api.enterprise.apigee.com</apigee.hosturl>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.org>${EdgeOrg}</apigee.org>
				<apigee.username>${EdgeUsername}</apigee.username>
				<apigee.password>${EdgePassword}</apigee.password>
				<api.northbound.domain>${EdgeNorthboundDomain}</api.northbound.domain>
				<apigee.config.dir>target/resources/edge</apigee.config.dir>
				<apigee.config.exportDir>target/test/integration</apigee.config.exportDir>
				<apigee.config.options>update</apigee.config.options>
				<apigee.app.ignoreAPIProducts>true</apigee.app.ignoreAPIProducts>
				<config.cert.suffix>${ConfigCertSuffix}</config.cert.suffix>
				<!-- Can't figure out how to pass this as a single argument, mvn and frontend plugin breaks by space, so just use a single tag
				<api.testtag>@get-ping or @mismtached-cert</api.testtag>
				-->
				<api.testtag>@test</api.testtag>
			</properties>
		</profile>
		<profile>
			<id>prod-two-way</id>
			<!-- amer-demo13 - Uses properties from $HOME/.m2/settings.xml or environment variables via set-edge-env-values used in Jenkins -->
			<properties>
				<apigee.profile>amer-demo13-prod</apigee.profile>
				<apigee.env>${EdgeEnv}</apigee.env>
				<apigee.hosturl>https://api.enterprise.apigee.com</apigee.hosturl>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.org>${EdgeOrg}</apigee.org>
				<apigee.username>${EdgeUsername}</apigee.username>
				<apigee.password>${EdgePassword}</apigee.password>
				<api.northbound.domain>${EdgeNorthboundDomain}</api.northbound.domain>
				<apigee.config.dir>target/resources/edge</apigee.config.dir>
				<apigee.config.exportDir>target/test/integration</apigee.config.exportDir>
				<apigee.config.options>update</apigee.config.options>
				<apigee.app.ignoreAPIProducts>true</apigee.app.ignoreAPIProducts>
				<config.cert.suffix>${ConfigCertSuffix}</config.cert.suffix>
				<api.testtag>@prod</api.testtag>
			</properties>
		</profile>
	</profiles>

	<build>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>io.apigee.build-tools.enterprise4g</groupId>
					<artifactId>apigee-edge-maven-plugin</artifactId>
					<version>1.0.2</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>

			<!-- run jslint -->
			<plugin>
				<groupId>com.cj.jshintmojo</groupId>
				<artifactId>jshint-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<id>jslint</id>
						<phase>validate</phase>
						<goals>
							<goal>lint</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<options>curly,eqeqeq,forin,latedef,undef,noempty,nonew,unused</options>
					<directories>
						<directory>apiproxy/resources/jsc</directory>
					</directories>
					<reporter>jslint</reporter>
				</configuration>
			</plugin>

			<!-- copy the full apiproxy folder to target folder -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<!--source -->
									<directory>${project.root.dir}</directory>
									<filtering>true</filtering>
									<includes>
										<include>resources/**</include>
										<include>apiproxy/**</include>
										<include>test/integration/**</include>
										<include>test/performance/**</include>
									</includes>
								</resource>
							</resources>
							<!--target -->
							<outputDirectory>${target.root.dir}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.2</version>
				<executions>
					<execution>
						<id>replace</id>
						<phase>process-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<basedir>${target.root.dir}</basedir>
					<includes>
						<include>apiproxy/pingstatus-tls-v1.xml</include>
						<include>apiproxy/proxies/default.xml</include>
						<include>test/integration/test-config.json</include>
						<include>resources/edge/org/apiProducts.json</include>
						<include>resources/edge/org/developerApps.json</include>
						<include>resources/edge/org/developers.json</include>
						<include>resources/edge/env/*/keystores.json</include>
						<include>resources/edge/env/*/aliases.json</include>
						<include>resources/edge/env/*/references.json</include>
					</includes>
					<replacements>
						<replacement>
							<token>API_NORTHBOUND_DOMAIN</token>
							<value>${api.northbound.domain}</value>
						</replacement>
						<replacement>
							<token>REPLACE_DESCRIPTION</token>
							<value>commit ${commit} from ${branch} branch by ${user.name}</value>
						</replacement>
						<replacement>
							<token>APIGEE_ENVIRONMENT</token>
							<value>${apigee.env}</value>
						</replacement>
						<replacement>
							<token>CERT_SUFFIX</token>
							<value>${config.cert.suffix}</value>
						</replacement>
					</replacements>
				</configuration>
			</plugin>

			<plugin>
				<groupId>io.apigee.build-tools.enterprise4g</groupId>
				<artifactId>apigee-edge-maven-plugin</artifactId>
				<version>1.1.6</version>
				<executions>
					<execution>
						<id>configure-bundle-step</id>
						<phase>package</phase>
						<goals>
							<goal>configure</goal>
						</goals>
					</execution>
					<!--deploy bundle -->
					<execution>
						<id>deploy-bundle-step</id>
						<phase>install</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- apigee Configuration prefix: apigee-config then goal (e.g. apigee-config:apiproducts) -->
            <plugin>
                <groupId>com.apigee.edge.config</groupId>
                <artifactId>apigee-config-maven-plugin</artifactId>
                <version>1.5.3</version>
                <executions>
                    <execution>
                        <id>create-config-keystores</id>
                        <phase>package</phase>                        
                        <goals>
                            <goal>keystores</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-config-aliases</id>
                        <phase>package</phase>                        
                        <goals>
                            <goal>aliases</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-config-references</id>
                        <phase>package</phase>                        
                        <goals>
                            <goal>references</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-config-cache</id>
                        <phase>verify</phase>                        
                        <goals>
                            <goal>caches</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-config-targetserver</id>
                        <phase>verify</phase>                        
                        <goals>
                            <goal>targetservers</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-config-kvm</id>
                        <phase>verify</phase>                        
                        <goals>
                            <goal>keyvaluemaps</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-config-apiproduct</id>
                        <phase>install</phase>                        
                        <goals>
                            <goal>apiproducts</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-config-developer</id>
                        <phase>install</phase>                        
                        <goals>
                            <goal>developers</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-config-app</id>
                        <phase>install</phase>                        
                        <goals>
                            <goal>apps</goal>
                        </goals>
                    </execution>
                    <execution>
						<id>export-config-app</id>
						<phase>install</phase>
						<configuration>
                            <skip>${skip.export}</skip>
                        </configuration>
						<goals>
							<goal>exportAppKeys</goal>
						</goals>
					</execution>
                </executions>
            </plugin>   

            <!-- install node, npm install, run apigeelint, run unit, run integration -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.8.0</version>
				<!-- NOTE: put executable in targetnode, otherwise uses node and deploy plugin thinks its a node.js proxy -->
				<configuration>
					<installDirectory>targetnode</installDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install node and npm</id>
						<phase>validate</phase>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v12.16.2</nodeVersion>
						</configuration>
					</execution>
					<execution>
						<id>npm install</id>
						<phase>validate</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>apigeelint</id>
						<phase>validate</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run apigeelint</arguments>
						</configuration>
					</execution>
					<execution>
						<id>unit</id>
						<phase>validate</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run unit</arguments>
						</configuration>
					</execution>
					<execution>
						<id>integration</id>
						<phase>install</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<skip>${skip.integration}</skip>
							<arguments>run integration -- --tags ${api.testtag}</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

            <!-- cleaning dirs -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<skip>${skip.clean}</skip>
				</configuration>
				<executions>
					<!-- Don't clean on init for iteration on tests -->
					<execution>
						<id>auto-clean-init</id>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
					<!-- leave the target dir for debugging, post mortem -->
					<execution>
						<id>auto-clean-install</id>
						<phase>install</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
